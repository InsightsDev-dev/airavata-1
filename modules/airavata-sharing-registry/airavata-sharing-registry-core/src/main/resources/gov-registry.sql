/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
*/

CREATE TABLE DOMAIN (
  DOMAIN_ID VARCHAR(255),
  NAME VARCHAR(255),
  DESCRIPTION VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (DOMAIN_ID)
);

CREATE TABLE USER (
  USER_ID VARCHAR(255),
  DOMAIN_ID VARCHAR(255),
  USER_NAME VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (USER_ID),
  FOREIGN KEY (DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE USER_GROUP (
  GROUP_ID VARCHAR(255),
  DOMAIN_ID VARCHAR(255),
  NAME VARCHAR(255),
  DESCRIPTION VARCHAR(255),
  OWNER_ID VARCHAR(255),
  TYPE VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (GROUP_ID),
  FOREIGN KEY (DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (OWNER_ID) REFERENCES USER(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE GROUP_MEMBERSHIP (
  PARENT_ID VARCHAR(255),
  CHILD_ID VARCHAR(255),
  CHILD_TYPE VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (PARENT_ID, CHILD_ID),
  FOREIGN KEY (PARENT_ID) REFERENCES USER_GROUP(GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (CHILD_ID) REFERENCES USER_GROUP(GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ENTITY_TYPE (
  ENTITY_TYPE_ID VARCHAR(255),
  DOMAIN_ID VARCHAR(255),
  NAME VARCHAR(255),
  DESCRIPTION VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (ENTITY_TYPE_ID),
  FOREIGN KEY (DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PERMISSION_TYPE (
  PERMISSION_TYPE_ID VARCHAR(255),
  DOMAIN_ID VARCHAR(255),
  NAME VARCHAR(255),
  DESCRIPTION VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (PERMISSION_TYPE_ID),
  FOREIGN KEY (DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ENTITY (
  ENTITY_ID VARCHAR(255),
  DOMAIN_ID VARCHAR(255),
  ENTITY_TYPE_ID VARCHAR(255),
  OWNER_ID VARCHAR(255),
  PARENT_ENTITY_ID VARCHAR(255),
  NAME VARCHAR(255),
  DESCRIPTION VARCHAR(255),
  FULL_TEXT TEXT,
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (ENTITY_ID),
  FOREIGN KEY (DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (ENTITY_TYPE_ID) REFERENCES ENTITY_TYPE(ENTITY_TYPE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (OWNER_ID) REFERENCES USER(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (PARENT_ENTITY_ID) REFERENCES ENTITY(ENTITY_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ENTITY_METADATA (
  ENTITY_ID VARCHAR (255),
  META_KEY VARCHAR (255),
  META_VALUE VARCHAR (255),
  PRIMARY KEY (ENTITY_ID, META_KEY),
  FOREIGN KEY (ENTITY_ID) REFERENCES ENTITY(ENTITY_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE SHARING (
  PERMISSION_TYPE_ID VARCHAR(255),
  ENTITY_TYPE_ID VARCHAR(255),
  ENTITY_ID VARCHAR(255),
  GROUP_ID VARCHAR(255),
  CREATED_TIME BIGINT,
  UPDATED_TIME BIGINT,
  PRIMARY KEY (PERMISSION_TYPE_ID, ENTITY_ID, GROUP_ID),
  FOREIGN KEY (PERMISSION_TYPE_ID) REFERENCES PERMISSION_TYPE(PERMISSION_TYPE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (ENTITY_TYPE_ID) REFERENCES  ENTITY_TYPE(ENTITY_TYPE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (GROUP_ID) REFERENCES USER_GROUP(GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CONFIGURATION
(
  CONFIG_KEY VARCHAR(255),
  CONFIG_VALUE VARCHAR(255),
  PRIMARY KEY(CONFIG_KEY, CONFIG_VALUE)
);

INSERT INTO CONFIGURATION (CONFIG_KEY, CONFIG_VALUE) VALUES('sharing_reg_version', '0.17');